% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_specific_cluster_profiling.R
\name{user_specific_cluster_profiling}
\alias{user_specific_cluster_profiling}
\title{User Specific Cluster Profiling}
\usage{
user_specific_cluster_profiling(
  from_file = F,
  path = NULL,
  enrichment_keys = NULL,
  db = "GO"
)
}
\arguments{
\item{from_file}{A Boolean. If the enrichment is based on option 1 (see above), set to TRUE.}

\item{path}{The path to the enrichment file. Can be ignored if 'from_file' is FALSE.}

\item{enrichment_keys}{A vector of keys, the database terms should be scanned for for each cluster. Will be ignored if 'from_file' is TRUE.}

\item{db}{"GO" to use Gene Ontology database or "KEGG" to use KEGG database. Will be ignored when 'from_file' is TRUE.}
}
\description{
Offers a user-defined enrichment analysis for the identified modules. There are two options:
1) The user provides their own enrichment file.
This file should be provided in .csv format where the column names represent the categories (a.k.a. "keys", e.g. cell types), and the columns contain genes representative of that key.
The genes do not have to be exclusive with regard to the key they belong to and the columns are not required to be of the same length.
If such a file is provided, the "from_file" parameter needs to be set to TRUE and the path parameter needs to be set to the path at which to find the file.
2) Instead of providing an enrichment file, the user can also choose a database - so far Gene Ontology and KEGG are supported â€“ and define a vector of keys as strings.
The function then conducts an enrichment analysis using clusterProfiler functions (Guangchuang Yu, 2012) and filters the enrichment results for terms including the defined keys.
In this case, the "from_file" parameter needs to be set to FALSE and the "enrichment_keys" parameter must be set to the vector of keys, the modules should be screened for.
By setting the parameter 'db = "GO"' or 'db = "KEGG"', the GO or KEGG database is chosen accordingly.
Up to 2 user-defined enrichments are possible so far and they are saved as "enriched_per_cluster" and "enriched_per_cluster2" in hcobject$satellite_outputs.
The enrichment results will be visualized as stacked bar plot annotations on the module heatmap when rerunning plot_cluster_heatmap().
}
